// <auto-generated />

#nullable enable

namespace Something
{
    partial class Foo
    {
        public static global::Something.Foo.OuterClass<global::Something.Foo.InnerClass<object>> Format(global::Something.Foo.OuterClass<global::Something.Foo.InnerClass<object>> format, global::Something.Foo.OuterClass<global::Something.Foo.InnerClass<object>> args0)
        {
            var args = new Arguments1<global::Something.Foo.OuterClass<global::Something.Foo.InnerClass<object>>>(args0);
            var argsSpan = global::System.Runtime.InteropServices.MemoryMarshal.CreateReadOnlySpan(ref args.arg0, 1);
            return Format(format, argsSpan);
        }

        public static global::Something.Foo.OuterClass<global::Something.Foo.InnerClass<object>> Format(global::Something.Foo.OuterClass<global::Something.Foo.InnerClass<object>> format, params global::Something.Foo.OuterClass<global::Something.Foo.InnerClass<object>>[] args)
        {
            var argsSpan = new global::System.ReadOnlySpan<global::Something.Foo.OuterClass<global::Something.Foo.InnerClass<object>>>(args);
            return Format(format, argsSpan);
        }
    }

    [global::System.Runtime.CompilerServices.InlineArray(1)]
    file struct Arguments1<T>
    {
        public T arg0;

        public Arguments1(T value0)
        {
            arg0 = value0;
        }
    }
}
